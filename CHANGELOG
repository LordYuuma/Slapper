5.0:
    Moving all HexChat functionality into plugin itself.
    Make module fully HexChat agnostic and functional only.
    Allow easier subclassing of Slapper.
    Some renaming...
    Moved plugins to new plugins folder.
4.3:
    Allow recursive definition of replacements.
    Changed underlines in configuration keys to spaces.
    No more need to import key definitions from Slapper module.
    Added docstrings to public methods.
    Renamed the module for easier importing.
4.2.1:
    Allow list of slappers to choose from, when using random slapping.
4.2:
    Allow overriding of replacement values.
4.1:
    No longer dependant on file endings.
    Added random slapping.
    Always show help on wrong syntax.
4.0:
    Yet again changed the config file structure.
    Allow definition of own replacements.
    Allow optional commands, which are executed after normal ones.
3.1.1:
    !! SECURITY UPDATE !!
    Fixed possible code injection
3.1:
    Use ArgumentParser for commandline style slapping.
    Add possibility to slap more than one person at once.
    !! IMPORTANT !! {target} has been switched out to {targets}
    Documented example configuration.
    Added representation for Slapper object.
3.0:
    Use ConfigParser instead of HexChat Preferences to prevent stack smashing.
    Split into module and plugin.
    Only allow save commands (/me, /say)
2.2:
    Added {name} (the name of the slapobject, not it's represented value) to the replacable
    keys, hooray for recursive algorithms based on this.
2.1:
    Representing preference list as key => value dictionary instead of an array
    Removing hardcoded zero commands (instead "default" is used, when there is no key available)
2.0:
    more code density, using lambdas where useful
    added interaction with python console
1.0:
    not really usable code blob, core functionality
